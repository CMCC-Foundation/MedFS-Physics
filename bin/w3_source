#!/bin/sh
# --------------------------------------------------------------------------- #
# w3_source : Make a FORTRAN source code file of a selected WAVEWATCH III     #
#             program and put in work directory.                              #
#                                                                             #
# use       : w3_source [program [...]]                                       #
#              program: program name(s) of WAVEWATCH III (sub)program(s).     #
#           - Source codes and make file are put in main directory in a tar   #
#             file, for instance ww3_grid.tar                                 #
#           - Check set-up in section 0.                                      #
#                                                                             #
# error codes : Program ends if error occurs in make_makefile.sh.             #
#                                                                             #
# programs used :                                                             #
#       make_makefile.sh : Make the makefile.                                 #
#                                                                             #
#                                                      Hendrik L. Tolman      #
#                                                      May 2009               #
#                                                                             #
#    Copyright 2009 National Weather Service (NWS),                           #
#       National Oceanic and Atmospheric Administration.  All rights          #
#       reserved.  WAVEWATCH III is a trademark of the NWS.                   #
#       No unauthorized use without permission.                               #
#                                                                             #
# --------------------------------------------------------------------------- #
# 0. Set up                                                                   #
# --------------------------------------------------------------------------- #

  fext='f90'                        # FORTRAN file extension to be used
  lext='lst'                        # FORTRAN listing extension
  comp='pgf90'                      # compiler command
  fflags='-Mlist -fast'             # compiler flags, '-c' automatically 
                                    # invoked. 
  ldflags=                          # loader (linker) flags
  libs=                             # libraries

# --------------------------------------------------------------------------- #
# 1. Preparations                                                             #
# --------------------------------------------------------------------------- #
# 1.a Internal variables

  set -e
  ww3_env='.wwatch3.env'   # setup file

# 1.b ID header  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  echo ' '
  echo '               **************************************'
  echo '             ***  making WAVEWATCH III source codes ***'
  echo '               **************************************'
  echo ' '

# 1.c Process/save input - - - - - - - - - - - - - - - - - - - - - - - - - - - 

  if [ "$#" = '0' ]
  then
    progs='ww3_grid ww3_strt ww3_prep ww3_shel ww3_outf ww3_outp ww3_trck'
    progs="$progs ww3_grib"
    progs="$progs gx_outf gx_outp"
    progs="$progs ww3_multi"
  else
    progs="$*"
  fi

# 1.d Get data from setup file - - - - - - - - - - - - - - - - - - - - - - - - 

  cd
  if [ -f $ww3_env ]
  then
    set `grep WWATCH3_DIR $ww3_env` ; shift
    main_dir="$*"
    set `grep WWATCH3_TMP $ww3_env` ; shift
    temp_dir="$*"
  else
    echo "*** Set-up file $ww3_env not found ***"
    exit
  fi

  echo "Scratch directory : $temp_dir"
  echo ' '

# 1.e Prepare scratch directory  - - - - - - - - - - - - - - - - - - - - - - - 

  if [ ! -d $temp_dir ]
  then
    if ! `mkdir $temp_dir`
    then
      echo ' ' ; echo "      *** Cannot create $temp_dir ***" ; echo ' '
      exit
    fi
  fi

  cd $temp_dir
  rm -f *.f90 *.$fext *.l makefile
  cd $main_dir/ftn

# 1.f Prepare makefile - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  if [ ! -f $main_dir/bin/switch ]
  then
    echo ' ' ; echo "      *** switch file not found ***" ; echo ' '
    exit
  fi

  make_prog='y'
  if [ -f $main_dir/bin/switch.old ]
  then
    if [ -f $main_dir/ftn/makefile ] && \
       [ -z "`diff $main_dir/bin/switch $main_dir/bin/switch.old`" ]
    then
      make_prog='n'
    fi
  fi

  if [ "$make_prog" = 'y' ]
  then
    echo 'Making makefile ...'
    if $main_dir/bin/make_makefile.sh
    then
      cp $main_dir/bin/switch $main_dir/bin/switch.old
    else
      exit 1
    fi
  fi
  echo ' '

# --------------------------------------------------------------------------- #
# 2. Make code for all requests                                               #
# --------------------------------------------------------------------------- #
# 2.a Loop over all requests

  for prog in $progs
  do
    echo "Processing $prog.f90"
    echo "-----------------------"
    echo " "

# 2.b Check input  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

    OK='n'
    checks='ww3_grid ww3_strt ww3_prep ww3_shel ww3_outf ww3_outp ww3_trck'
    checks="$checks ww3_grib"
    checks="$checks gx_outf gx_outp"
    checks="$progs ww3_multi"

    for check in $checks
    do
      if [ "$prog" = "$check" ]
      then
        OK='y'
      fi
    done

    if [ "$OK" = 'n' ]
    then
      echo "   *** Program name not recognized ***"
      echo ' '

# 2.c Get file list from makefile  - - - - - - - - - - - - - - - - - - - - - - 

    else
      set `grep "link $prog" $main_dir/ftn/makefile`
      until [ "$1" = "$prog" ]
      do
        shift
      done
      files=$*
      fors=
      objs=

# 2.c Run ad3 to get sources - - - - - - - - - - - - - - - - - - - - - - - - - 

      for file in $files
      do
        ad3 $file 0 1
        if [ "$fext" != 'f90' ] ; then
          mv $temp_dir/$file.f90 $temp_dir/$file.$fext ; fi
        fors="$fors $file.$fext"
        objs="$objs $file.o"
        mods="$mods $file.mod"
        lsts="$lsts $file.$lext"
      done

# 2.d Make makefile  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

      cd $temp_dir

      echo 'SHELL=/bin/sh'                                       >> makefile
      echo '#'                                                   >> makefile
      echo "SRCS=	$fors"                                   >> makefile
      echo "OBJS=	$objs"                                   >> makefile
      echo "MODS=	$mods"                                   >> makefile
      echo "LSTS=	$lsts"                                   >> makefile
      echo '#'                                                   >> makefile
      echo "FC =	$comp"                                   >> makefile
      echo "FFLAGS =	$fflags"                                 >> makefile
      echo "LDFLAGS =	$ldflags"                                >> makefile
      echo "LIBS =	$libs"                                   >> makefile
      echo "CMD =	$prog"                                   >> makefile
      echo '#'                                                   >> makefile
      echo 'all:	$(CMD)'                                  >> makefile
      for file in $files
      do
        echo ' '                                                 >> makefile
        sed -n "/^\$(aPo)\/$file.o :/p" $main_dir/ftn/makefile | \
           sed -e 's/\$(aPo)\///g' -e "s/ftn/$fext/g" \
               -e 's/ : /:	/g'                              >> makefile
        echo '	$(FC) -c $(FFLAGS)'" $file.$fext"                >> makefile
      done
      echo ' '                                                   >> makefile
      echo '$(CMD):	$(OBJS)'                                 >> makefile
      echo '	$(FC) $(LDFLAGS) -o $(CMD) $(OBJS) $(LIBS)'      >> makefile
      echo ' '                                                   >> makefile
      echo 'clean:'                                              >> makefile
      echo '	rm -f $(OBJS) $(MODS) $(LSTS)'                   >> makefile
      echo ' '                                                   >> makefile

      tar -cf $main_dir/work/$prog.tar ./*.$fext ./makefile
      rm -f *.f90 makefile
      echo ' '
    fi
  done

# --------------------------------------------------------------------------- #
# 3. End of program ID.                                                       #
# --------------------------------------------------------------------------- #

  echo ' '
  echo '                  *********************************'
  echo '                *** end of source code generation ***'
  echo '                  *********************************'
  echo ' '

# End of w3_make ------------------------------------------------------------ #
