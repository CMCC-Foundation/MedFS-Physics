#!/bin/sh
# --------------------------------------------------------------------------- #
# arc_wwatch3 : Archive WAVEWATCH III in tar files which can be processed by  #
#               the installation program install_wwatch3.                     #
#                                                                             #
#                                                      Hendrik L. Tolman      #
#                                                      May 2009               #
#                                                                             #
#    Copyright 2009 National Weather Service (NWS),                           #
#       National Oceanic and Atmospheric Administration.  All rights          #
#       reserved.  WAVEWATCH III is a trademark of the NWS.                   #
#       No unauthorized use without permission.                               #
#                                                                             #
# --------------------------------------------------------------------------- #
# 1. Preparations                                                             #
# --------------------------------------------------------------------------- #
# 1.a Internal variables

  tmp='ww3_temp'           # temporary working directory
  ww3_env='.wwatch3.env'   # setup file

# 1.b ID header  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  clear
  echo ' '
  echo '               **************************************'
  echo '             ***   WAVEWATCH III archiving program  ***'
  echo '               **************************************'
  echo ' '

# 1.c Read data from the environment file  - - - - - - - - - - - - - - - - - -

  cd
  if test -f $ww3_env
  then
    set `grep WWATCH3_DIR $ww3_env` ; shift
    main_dir="$*"
  else
    echo "*** Set-up file $ww3_env not found ***"
    exit
  fi

# 1.d Check / make directories   - - - - - - - - - - - - - - - - - - - - - - -

  if test -d $main_dir
  then
    cd $main_dir
  else
    echo "*** Directory $main_dir not found ***"
    exit
  fi

  if test ! -d arc
  then
    mkdir arc
  fi

# --------------------------------------------------------------------------- #
# 2. Process requests                                                         #
# --------------------------------------------------------------------------- #
# 2.a Requested files

  is="1 2 3 4"
  if [ -d $main_dir/doc90 ] ; then
    is="$is 5" ; fi
  make_doc='n'

  for i in $is
  do
    OK="$NULL"
    until test "$OK" = 'y' || test "$OK" = 'Y' || \
          test "$OK" = 'n' || test "$OK" = 'N'
    do
      case $i in
        1) echo -n "Make auxiliaries file ? [y/n] : " ;;
        2) echo -n "Make source code file ? [y/n] : " ;;
        3) echo -n "Make input files file ? [y/n] : " ;;
        4) echo -n "Make test cases file  ? [y/n] : " ;;
        5) echo -n "Make docblock file    ? [y/n] : " ;;
      esac
      read OK
    done

    if test "$OK" = 'y' || test "$OK" = 'Y'
    then
      do_it='y'
    else
      do_it='n'
    fi

    case $i in
     1) make_aux=$do_it ;;
     2) make_ftn=$do_it ;;
     3) make_inp=$do_it ;;
     4) make_tst=$do_it ;;
     5) make_doc=$do_it ;;
    esac
  done

# 2.b File names - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  OK="$NULL"
  ID="$NULL"
  until test "$OK" = 'y' || test "$OK" = 'Y'
  do
    echo ' '
    echo -n "Identifier for this archive version [$ID] : " ; read ID
    echo -n "   Are you sure ? [y/-] : " ; read OK
  done
  echo ' '

# 2.c Check for existence of files - - - - - - - - - - - - - - - - - - - - - -

  if test -z "$ID"
  then
    file_aux="$main_dir/arc/wwatch3.aux.tar"
    file_ftn="$main_dir/arc/wwatch3.ftn.tar"
    file_inp="$main_dir/arc/wwatch3.inp.tar"
    file_tst="$main_dir/arc/wwatch3.tst.tar"
    file_doc="$main_dir/arc/wwatch3.doc.tar"
  else
    file_aux="$main_dir/arc/wwatch3.$ID.aux.tar"
    file_ftn="$main_dir/arc/wwatch3.$ID.ftn.tar"
    file_inp="$main_dir/arc/wwatch3.$ID.inp.tar"
    file_tst="$main_dir/arc/wwatch3.$ID.tst.tar"
    file_doc="$main_dir/arc/wwatch3.$ID.doc.tar"
  fi

  for i in 1 2 3 4 5
  do
    case $i in
     1) file=$file_aux ; make=$make_aux ;; 
     2) file=$file_ftn ; make=$make_ftn ;; 
     3) file=$file_inp ; make=$make_inp ;; 
     4) file=$file_tst ; make=$make_tst ;;
     5) file=$file_doc ; make=$make_doc ;;
    esac
    if test -f $file && test "$make" = 'y'
    then
      echo "File $file exists."
      echo -n "   Replace ? [y/-] : "
      read OK
      if test "$OK" != 'y' && test "$OK" != 'Y'
      then
        case $i in
         1) make_aux='n' ;;
         2) make_ftn='n' ;;
         3) make_inp='n' ;;
         4) make_tst='n' ;;
         4) make_doc='n' ;;
        esac
      fi
    fi
  done

# 2.d Final check before action  - - - - - - - - - - - - - - - - - - - - - - -

  action="$NULL"
  if [ "$make_aux" = 'n' ] && [ "$make_ftn" = 'n' ] && \
     [ "$make_inp" = 'n' ] && [ "$make_tst" = 'n' ] && [ "$make_doc" = 'n' ]
  then
    action='n'
  else
    action='y'
    echo ' '
    echo 'Files to be generated :'
    echo '-----------------------'
    if test "$make_aux" = 'y'
    then
      echo "   $file_aux"
    fi
    if test "$make_ftn" = 'y'
    then
      echo "   $file_ftn"
    fi
    if test "$make_inp" = 'y'
    then
      echo "   $file_inp"
    fi
    if test "$make_tst" = 'y'
    then
      echo "   $file_tst"
    fi
    if test "$make_doc" = 'y'
    then
      echo "   $file_doc"
    fi
  fi

  echo ' '
  echo -n "Continue ? [y/-] : "
  read OK
  if test "$OK" != 'y' && test "$OK" != 'Y'
  then
    action='n'
  fi
  echo ' '

  if test "$action" = 'n'
  then
    echo ' '
    echo '                   *******************************'
    echo '                 ***       End of program        ***'
    echo '                   *******************************'
    echo ' ' ; exit 0
  fi

# --------------------------------------------------------------------------- #
# 3. Auxilaries file                                                          #
# --------------------------------------------------------------------------- #
# 3.a Header

  if test "$make_aux" = 'y'
  then
    echo ' '
    echo "Auxiliaries ($file_aux)"
    echo '-----------------------------------------------------------------'

# 3.b cleanup old file - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    cd $main_dir
    cd aux
#   rm -f $file_aux

# 3.c Gather files to be stored  - - - - - - - - - - - - - - - - - - - - - - -

    cd $main_dir
    rm -rf $tmp
    mkdir $tmp
    cd $tmp

    files="w3adc.f w3prnt.f w3list.f w3split.f"
    files="$files map2_1.gs map2_2.gs map2_3.gs map_s3.gs cbarn.gs colorset.gs"
    files="$files spec.gs source.gs 1source.gs spec_ids.gen profile.gs"
    for file in $files
    do 
      if [ -f ../aux/$file ]
      then
        echo "    Processing ../aux/$file"
        cp ../aux/$file .
      else
        echo "*** MISSING FILE *** ../aux/$file"
      fi
    done

    files='ad3 ad3_test switch.gen 
           w3_make w3_new list ln3 find_switch all_switches make_makefile.sh
           arc_wwatch3 w3_clean w3_source'
    for file in $files
    do 
      if [ -f ../bin/$file ]
      then
        echo "    Processing ../bin/$file"
        cp ../bin/$file .
      else
        echo "*** MISSING FILE *** ../bin/$file"
      fi
    done

    for file in ../bin/comp.*
    do 
      echo "    Processing $file"
      cp $file .
    done

    for file in ../bin/link.*
    do 
      echo "    Processing $file"
      cp $file .
    done

# 3.d make new file  - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    echo "    Making file $file_aux"
    tar -cf $file_aux .
    cd $main_dir
    rm -rf $tmp
  fi

# --------------------------------------------------------------------------- #
# 4. Source codes file                                                        #
# --------------------------------------------------------------------------- #
# 4.a Header

  if test "$make_ftn" = 'y'
  then
    echo ' '
    echo "Source codes ($file_ftn)"
    echo '-----------------------------------------------------------------'

# 4.b cleanup old file - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    cd $main_dir
    cd ftn
#   rm -f $file_ftn

# 4.c make new file  - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    echo "    Making file $file_ftn"
    echo "    (direct tar of directory, no test on files)"
    tar -cvf $file_ftn ./*.ftn ./*.f90
  fi

# --------------------------------------------------------------------------- #
# 5. Input files file                                                         #
# --------------------------------------------------------------------------- #
# 5.a Header

  if test "$make_inp" = 'y'
  then
    echo ' '
    echo "Input files ($file_inp)"
    echo '-----------------------------------------------------------------'

# 5.b cleanup old file - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    cd $main_dir
    cd inp
#   rm -f $file_inp

# 5.c make new file  - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    echo "    Making file $file_inp"
    echo "    (direct tar of directory, no test on files)"
    tar -cvf $file_inp ./*.inp ./*.ww3
  fi

# --------------------------------------------------------------------------- #
# 6. test cases file                                                          #
# --------------------------------------------------------------------------- #
# 6.a Header

  if test "$make_tst" = 'y'
  then
    echo ' '
    echo "Test cases ($file_tst)"
    echo '-----------------------------------------------------------------'

# 6.b cleanup old file - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    cd $main_dir
    cd test
#   rm -f $file_tst

# 6.c genarate data tar files  - - - - - - - - - - - - - - - - - - - - - - - -

    for dir in `ls -d mww3_data_??`
    do
      echo "    Making tar file for $dir ..."
      rm -f $dir.tar
      rm -f $dir.tar.gz
      rm -f $dir/wind.*
      rm -f $dir/ice.*
      rm -f $dir/restart.*
      tar -cf $dir.tar ./$dir
      gzip $dir.tar
    done
    echo ' '

# 6.d make new file  - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    echo "    Making file $file_tst"
    echo "    (direct tar of directory, no test on files)"
    tar -cvf $file_tst ./ww3_tp* ./ww3_ts* ./mww3_test_* ./mww3_case_*      \
                       ./mww3_data_??.tar.gz
    rm -f ./mww3_data_??.tar.gz
  fi

# --------------------------------------------------------------------------- #
# 7. docblock file                                                            #
# --------------------------------------------------------------------------- #
# 7.a Header

  if test "$make_doc" = 'y'
  then
    echo ' '
    echo "docblocks ($file_doc)"
    echo '-----------------------------------------------------------------'

# 7.b cleanup old file - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    cd $main_dir
    cd doc90
#   rm -f $file_doc

# 7.c make new file  - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    echo "    Making file $file_doc"
    echo "    (direct tar of directory, no test on files)"
    tar -cvf $file_doc ./*
  fi

# --------------------------------------------------------------------------- #
# 8. Clean up                                                                 #
# --------------------------------------------------------------------------- #

  echo ' '
  echo ' '
  echo '                   *******************************'
  echo '                 ***       End of program        ***'
  echo '                   *******************************'
  echo ' '

# end of script ------------------------------------------------------------- #
